{"version":3,"file":"upbondEmbed.cjs.js","mappings":"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AACE,MAAM;UACxCR,SAAS,EAAE,IAAI,CAACA,SAAS;UACzB4B,IAAI,EAAEC,MAAM,CAACC,QAAQ,CAACF;QACxB;MACF,CAAC,CAAC;MACFL,MAAM,CAACY,EAAE,CAAC,MAAM,EAAGR,IAAI,IAAK;QAC1B,IAAIA,IAAI,CAACD,IAAI,KAAK,OAAO,EAAE;UACzB,IAAIC,IAAI,CAACA,IAAI,CAACS,IAAI,IAAIT,IAAI,CAACA,IAAI,CAACS,IAAI,KAAK,GAAG,EAAE;YAC5C,IAAI,CAACzB,aAAa,GAAG,KAAK;YAC1B,IAAI,CAACK,aAAa,GAAGW,IAAI,CAACA,IAAI,CAACU,MAAM;YACrCJ,OAAO,CAAC;cACNK,GAAG,EAAE,EAAE;cACPC,eAAe,EAAE;YACnB,CAAC,CAAC;UACJ;UACAL,MAAM,CAAC,IAAIf,KAAK,CAACQ,IAAI,CAACA,IAAI,CAACa,GAAG,CAAC,CAAC;QAClC,CAAC,MAAM;UACL,IAAI,CAAC7B,aAAa,GAAG,IAAI;UACzBsB,OAAO,CAACN,IAAI,CAACA,IAAI,CAAC;QACpB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAC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","sources":["webpack://@upbond/upbond-embed/webpack/bootstrap","webpack://@upbond/upbond-embed/webpack/runtime/compat get default export","webpack://@upbond/upbond-embed/webpack/runtime/define property getters","webpack://@upbond/upbond-embed/webpack/runtime/hasOwnProperty shorthand","webpack://@upbond/upbond-embed/external commonjs2 \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@upbond/upbond-embed/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@upbond/upbond-embed/external commonjs2 \"@toruslabs/http-helpers\"","webpack://@upbond/upbond-embed/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@upbond/upbond-embed/external commonjs2 \"lodash.merge\"","webpack://@upbond/upbond-embed/./src/interfaces.ts","webpack://@upbond/upbond-embed/./src/supportedCurrencies.ts","webpack://@upbond/upbond-embed/./src/config.ts","webpack://@upbond/upbond-embed/external commonjs2 \"@ansugroup/timing-safe-equal\"","webpack://@upbond/upbond-embed/external commonjs2 \"crypto-browserify\"","webpack://@upbond/upbond-embed/./src/consent.ts","webpack://@upbond/upbond-embed/./src/embedUtils.ts","webpack://@upbond/upbond-embed/external commonjs2 \"@metamask/obs-store\"","webpack://@upbond/upbond-embed/external commonjs2 \"eth-rpc-errors\"","webpack://@upbond/upbond-embed/external commonjs2 \"fast-deep-equal\"","webpack://@upbond/upbond-embed/external commonjs2 \"is-stream\"","webpack://@upbond/upbond-embed/external commonjs2 \"pump\"","webpack://@upbond/upbond-embed/external commonjs2 \"loglevel\"","webpack://@upbond/upbond-embed/./src/loglevel.ts","webpack://@upbond/upbond-embed/./src/messages.ts","webpack://@upbond/upbond-embed/./src/utils.ts","webpack://@upbond/upbond-embed/./src/inpage-provider.ts","webpack://@upbond/upbond-embed/external commonjs2 \"create-hash\"","webpack://@upbond/upbond-embed/./src/integrity.ts","webpack://@upbond/upbond-embed/external commonjs2 \"events\"","webpack://@upbond/upbond-embed/./src/PopupHandler.ts","webpack://@upbond/upbond-embed/./src/siteMetadata.ts","webpack://@upbond/upbond-embed/./src/embed.ts","webpack://@upbond/upbond-embed/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/http-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-jrpc\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","import { JRPCId, JRPCMiddleware, JRPCRequest, JRPCVersion, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport createHash from \"create-hash\";\nimport type { Duplex } from \"readable-stream\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n} as const;\n\nexport const WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\",\n} as const;\n\nexport const WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\",\n} as const;\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport const SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\",\n} as const;\n\nexport const UPBOND_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  STAGING: \"staging\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n  LOCAL: \"local\",\n  V1_DEBUG: \"v1_debug\",\n  V1_LOCAL: \"v1_local\",\n  V1_DEVELOPMENT: \"v1_development\",\n  V1_STAGING: \"v1_staging\",\n  V1_PRODUCTION: \"v1_production\",\n  V2_DEBUG: \"v2_debug\",\n  V2_LOCAL: \"v2_local\",\n  V2_DEVELOPMENT: \"v2_development\",\n  V2_STAGING: \"v2_staging\",\n  V2_PRODUCTION: \"v2_production\",\n  DEBUG: \"debug\",\n  WALLET_DID: \"wallet-did\",\n  MPC_DEV: \"mpc-dev\",\n} as const;\n\nexport type BuildEnv =\n  | \"production\"\n  | \"staging\"\n  | \"development\"\n  | \"testing\"\n  | \"local\"\n  | \"v1_production\"\n  | \"v1_development\"\n  | \"v1_staging\"\n  | \"v1_local\"\n  | \"v1_debug\"\n  | \"v2_production\"\n  | \"v2_development\"\n  | \"v2_staging\"\n  | \"v2_local\"\n  | \"v2_debug\"\n  | \"debug\"\n  | \"wallet-did\"\n  | \"mpc-dev\";\n\nexport type PAYMENT_PROVIDER_TYPE = (typeof PAYMENT_PROVIDER)[keyof typeof PAYMENT_PROVIDER];\n\nexport type SUPPORTED_PAYMENT_NETWORK_TYPE = (typeof SUPPORTED_PAYMENT_NETWORK)[keyof typeof SUPPORTED_PAYMENT_NETWORK];\n\nexport type UPBOND_BUILD_ENV_TYPE = (typeof UPBOND_BUILD_ENV)[keyof typeof UPBOND_BUILD_ENV];\n\nexport interface IPaymentProvider {\n  line1: string;\n  line2: string;\n  line3: string;\n  supportPage: string;\n  minOrderValue: number;\n  maxOrderValue: number;\n  validCurrencies: string[];\n  validCryptoCurrenciesByChain: Partial<Record<string, { value: string; display: string }[]>>;\n  includeFees: boolean;\n  enforceMax: boolean;\n  sell?: boolean;\n}\n\nexport interface IBcHandler {\n  url: URL;\n  channelName: string;\n}\n\nexport interface IHashAlgorithmOptions {\n  algorithms?: createHash.algorithm[];\n  delimiter?: string;\n  full?: boolean;\n}\n\nexport interface SRI {\n  hashes: Record<createHash.algorithm, string>;\n  integrity?: string;\n}\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"home\" | \"account\";\nexport type ETHEREUM_NETWORK_TYPE =\n  | \"ropsten\"\n  | \"rinkeby\"\n  | \"kovan\"\n  | \"mainnet\"\n  | \"goerli\"\n  | \"localhost\"\n  | \"matic\"\n  | \"mumbai\"\n  | \"xdai\"\n  | \"bsc_mainnet\"\n  | \"bsc_testnet\";\n\nexport type LOGIN_TYPE =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"jwt\"\n  | \"email_password\"\n  | \"passwordless\";\n\nexport interface TorusCtorArgs {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Size of the widget button\n   * @defaultValue 56\n   */\n  buttonSize?: number;\n\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n}\n\nexport interface TorusLoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface NetworkInterface {\n  /**\n   * If any network other than the ones in enum, it should a JSON RPC URL\n   */\n  host: ETHEREUM_NETWORK_TYPE | string;\n  /**\n   * chainId for the network. If not provided, we query the host\n   */\n  chainId?: number;\n  /**\n   * Name of the network\n   */\n  networkName?: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer?: string;\n  /**\n   * Default currency ticker of the network (e.g: BNB)\n   */\n  ticker?: string;\n  /**\n   * Name for currency ticker (e.g: `Binance Coin`)\n   */\n  tickerName?: string;\n  /**\n   * URL for RPC (e.g: `https://rpc.ankr.com/polygon_mumbai`)\n   */\n  rpcUrl?: string;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\";\n  /**\n   * - `'none'`: do not prompt user for login or consent on reauthentication\n   * - `'login'`: prompt user for reauthentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\";\n  /**\n   * Maximum allowable elasped time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be reauthenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport interface LoginConfigItem {\n  /**\n   * Display Name. If not provided, we use the default for torus app\n   */\n  name: string;\n  /**\n   * The type of login. Refer to enum `LOGIN_TYPE`\n   */\n  typeOfLogin: LOGIN_TYPE;\n  /**\n   * Description for button. If provided, it renders as a full length button. else, icon button\n   */\n  description?: string;\n  /**\n   * Custom client_id. If not provided, we use the default for torus app\n   */\n  clientId?: string;\n  /**\n   * Logo to be shown on mouse hover. If not provided, we use the default for torus app\n   */\n  logoHover?: string;\n  /**\n   * Logo to be shown on dark background (dark theme). If not provided, we use the default for torus app\n   */\n  logoLight?: string;\n  /**\n   * Logo to be shown on light background (light theme). If not provided, we use the default for torus app\n   */\n  logoDark?: string;\n  /**\n   * Whether to show the login button on modal or not\n   */\n  showOnModal?: boolean;\n  /**\n   * Whether to show the login button on mobile\n   */\n  showOnMobile?: boolean;\n  /**\n   * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n   */\n  jwtParameters?: JwtParameters;\n  /**\n   * Show login button on the main list\n   */\n  mainOption?: boolean;\n  /**\n   * Whether to show the login button on desktop\n   */\n  showOnDesktop?: boolean;\n  /**\n   * Modify the order of buttons. Should be greater than zero, where 1 is top priority.\n   */\n  priority?: number;\n\n  /**\n   * Motify button bg that shown on the modal\n   */\n  buttonBgColor?: string;\n\n  /**\n   * Motify button text color that shown on the modal\n   */\n  buttonTextColor?: string;\n\n  /**\n   * Required. choose which Login provider that you will use, starts with upbond-\n   */\n  loginProvider: string;\n}\n\nexport interface LoginConfig {\n  /**\n   * Use the verifier provided by torus as a key or a default verifier used by torus\n   * {@link https://docs.tor.us/torus-wallet/developing-with-torus-wallet/oauth | Documentation}\n   */\n  [verifier: string]: LoginConfigItem;\n}\n\nexport interface TorusNodePub {\n  /**\n   * X component of a Public Key\n   */\n  X: string;\n  /**\n   * Y component of a Public Key\n   */\n  Y: string;\n}\n\nexport interface TorusPublicKey extends TorusNodePub {\n  /**\n   * Ethereum Public Address\n   */\n  address: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Chain Network to use\n   */\n  chainNetwork?: SUPPORTED_PAYMENT_NETWORK_TYPE;\n}\n\nexport interface VerifierArgs {\n  /**\n   * Verifier Enum\n   */\n  verifier: \"google\" | \"reddit\" | \"discord\";\n  /**\n   * email for google\n   *\n   * username for reddit\n   *\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * If true, returns {@link TorusPublicKey}, else returns string\n   */\n  isExtended?: boolean;\n}\n\nexport interface LoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * Returns if the logged in user is new\n   */\n  isNewUser: boolean;\n\n  /**\n   * login type of the logged in user (google, facebook etc)\n   */\n  typeOfLogin: LOGIN_TYPE;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface IntegrityParams {\n  /**\n   * Whether to check for integrity.\n   * Defaults to false\n   * @defaultValue false\n   */\n  check: boolean;\n  /**\n   * if check is true, hash must be provided. The SRI sha-384 integrity hash\n   * {@link https://www.srihash.org/ | SRI Hash}\n   */\n  hash?: string;\n  /**\n   * Version of torus-website to load\n   */\n  version?: string;\n}\n\nexport interface VerifierStatus {\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  google?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  facebook?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  reddit?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  twitch?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  discord?: boolean;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * Whitelabel theme\n   */\n  theme?: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark?: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight?: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Shows/hides billboard in torus-website.\n   * Defaults to false\n   * @defaultValue false\n   */\n  featuredBillboardHide?: boolean;\n  /**\n   * Shows/hides disclaimers on login page. Only works if special logins are hidden\n   * Defaults to false\n   * @defaultValue false\n   */\n  disclaimerHide?: boolean;\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   */\n  tncLink?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  privacyPolicy?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  contactLink?: LocaleLinks<string>;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n  /**\n   * Wallet theme\n   */\n  walletTheme?: {\n    /**\n     * Logo for wallet embed popup login\n     * @type {string}\n     */\n    logo?: string;\n    /**\n     * This value must true, if it's not true it will cause an UI error\n     * @type {boolean}\n     * @defaultValue true\n     */\n    isActive?: boolean;\n    /**\n     * Specify the name of the DApps\n     * @type {string}\n     */\n    name?: string;\n    /**\n     * Logo for the flying widget button\n     * @type {string}\n     */\n    buttonLogo?: string;\n    /**\n     * Background color for the login popup modal\n     * @type {string}\n     */\n    modalColor?: string;\n    /**\n     * Text color for the buttons text and some text on the notification popup\n     * @type {string}\n     */\n    textColor?: string;\n    /**\n     * Background color the buttons background.\n     * @type {string}\n     */\n    bgColor?: string;\n    /**\n     * Background color the hovered buttons.\n     * @type {string}\n     */\n    bgColorHover?: string;\n    /**\n     * Text color for the hovered buttons text and some text on the notification popup\n     * @type {string}\n     */\n    textColorHover?: string;\n    /**\n     * Config for the background and text in upbond login\n     * @type {{\n     *   globalBgColor: string;\n     *   globalTextColor: string;\n     * }}\n     */\n    upbondLogin?: {\n      globalBgColor: string;\n      globalTextColor: string;\n    };\n  };\n}\n\nexport interface IUpbondEmbedParams {\n  /**\n   *\n   *\n   * @type {string}\n   * will redirect you after upbond login reconstruct your key, then you will get your public key\n   * @defaultValue {window.location.origin}\n   * @memberof TorusParams\n   */\n  dappRedirectUri?: string;\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://app.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * binance uses https://binance.tor.us,\n   *\n   * bnb uses https://bnb.tor.us,\n   *\n   * polygon uses https://polygon.tor.us,\n   *\n   * lrc uses https://lrc.tor.us,\n   *\n   * beta uses https://beta.tor.us, (currently supports tkey)\n   *\n   * testing uses https://testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: BuildEnv;\n\n  /**\n   * If using direct upbond embed will not going to open the window\n   * @defaultValue true\n   * @type {boolean}\n   * @memberof IUpbondEmbedParams\n   */\n  isUsingDirect?: boolean;\n\n  /**\n   * Upbond button state, you can configure the button will be shown after or before loggedIn\n   *\n   * @type {{\n   *     showAfterLoggedIn: boolean;\n   *     showBeforeLoggedIn: boolean;\n   *   }}\n   * @memberof IUpbondEmbedParams\n   */\n  widgetConfig?: {\n    showAfterLoggedIn: boolean;\n    showBeforeLoggedIn: boolean;\n  };\n\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showUpbondButton?: boolean;\n  /**\n   * setting false, hides those verifiers from login modal\n   * @deprecated\n   * Please use loginConfig instead\n   */\n  enabledVerifiers?: VerifierStatus;\n  /**\n   * Array of login config items. Used to modify the default logins/ add new logins\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * Params to enable integrity checks and load specific versions of torus-website\n   */\n  integrity?: IntegrityParams;\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n  /**\n   * Skips TKey onboarding for new users\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  skipTKey?: boolean;\n\n  /**\n   * Setting `useWalletConnect` to true allows to display wallet connect qr scanner from torus-embed.\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useWalletConnect?: boolean;\n\n  /**\n   * Setting mfa level to `default` will present mfa screen to user on every third login\n   * Setting mfa level to `optional` will present mfa screen to user on every login but user can skip it\n   * Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login\n   * Setting mfa level to`none` will make the user skip the mfa setup screen\n   *\n   * Defaults to default\n   * @defaultValue default\n   */\n  mfaLevel?: \"none\" | \"default\" | \"optional\" | \"mandatory\";\n\n  /**\n   *\n   *\n   * @type {boolean}\n   * @memberof IUpbondEmbedParams\n   */\n  skipDialog?: boolean;\n\n  selectedVerifier?: string;\n\n  consentConfiguration?: {\n    enable: boolean;\n    config: {\n      publicKey: string;\n      scope: string[];\n      origin: string;\n    };\n  };\n\n  flowConfig?: \"normal\" | \"fastlogin\";\n  state?: string;\n}\n\nexport interface UnvalidatedJsonRpcRequest {\n  id?: JRPCId;\n  jsonrpc?: JRPCVersion;\n  method: string;\n  params?: unknown;\n  preopenInstanceId?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface BaseProviderState {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface JsonRpcConnection {\n  events: SafeEventEmitter;\n  middleware: JRPCMiddleware<unknown, unknown>;\n  stream: Duplex;\n}\n\nexport interface SentWarningsState {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  publicConfigStore: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n}\n\nexport interface SendSyncJsonRpcRequest extends JRPCRequest<unknown> {\n  method: \"eth_accounts\" | \"eth_coinbase\" | \"eth_uninstallFilter\" | \"net_version\";\n}\n\nexport interface PublicConfigState {\n  isUnlocked?: boolean;\n  selectedAddress?: string;\n  chainId?: string;\n  networkVersion?: string;\n  storageKey: string;\n}\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"base64url\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport type IObjectMultiplex = Duplex;\n\nexport type WalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n  networkVersion: string;\n};\n\nexport interface RequestedData {\n  email: string;\n  name: string;\n  address: string;\n  birthday: string;\n}\n\nexport interface Vc {\n  userTarget: string;\n}\n\nexport interface UserData {\n  dateAccepted: number;\n  userAddress: string;\n  dapp: string;\n  dappDescription: string;\n  dappId: number;\n}\n\nexport interface CredentialSubject {\n  id: string;\n  [\"@scope\"]: string[];\n  userData: UserData;\n  signHash: string;\n  clientHost: string;\n}\n\nexport interface Issuer {\n  id: string;\n}\n\nexport interface Proof {\n  type: string;\n  jwt: string;\n}\n\nexport interface Data {\n  requestedData: RequestedData;\n  vc: Vc;\n  credentialSubject: CredentialSubject;\n  issuer: Issuer;\n  type: string[];\n  [\"@context\"]: string[];\n  issuanceDate: Date;\n  proof: Proof;\n}\n\nexport interface ConsentDidResponse {\n  data: Data;\n  deadline: number;\n  origin: string;\n  permited: string;\n  did: string;\n}\n","import { PAYMENT_PROVIDER } from \"./interfaces\";\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nexport const CRYPTO_COMPARE_CURRENCIES = [\n  \"ETH\",\n  \"USDT\",\n  \"USDC\",\n  \"TUSD\",\n  \"EOSDT\",\n  \"USD\",\n  \"DAI\",\n  \"GUSD\",\n  \"DKKT\",\n  \"PAX\",\n  \"ILS\",\n  \"RUB\",\n  \"BYN\",\n  \"EUR\",\n  \"GBP\",\n  \"JPY\",\n  \"KRW\",\n  \"PLN\",\n  \"MXN\",\n  \"AUD\",\n  \"BRL\",\n  \"CAD\",\n  \"CHF\",\n  \"KPW\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"XOF\",\n  \"CNHT\",\n  \"DOGE\",\n  \"UAH\",\n  \"TRY\",\n  \"HKD\",\n  \"XJP\",\n  \"SGD\",\n  \"USC\",\n  \"NZD\",\n  \"NGN\",\n  \"RUR\",\n  \"COP\",\n  \"GHS\",\n  \"EGP\",\n  \"IDR\",\n  \"BHD\",\n  \"CRC\",\n  \"PEN\",\n  \"AED\",\n  \"DOP\",\n  \"PKR\",\n  \"HUF\",\n  \"VND\",\n  \"XAR\",\n  \"LTC\",\n  \"RON\",\n  \"OMR\",\n  \"MYR\",\n  \"DKK\",\n  \"UGX\",\n  \"ZMW\",\n  \"SAR\",\n  \"SEK\",\n  \"GEL\",\n  \"RWF\",\n  \"IRR\",\n  \"TZS\",\n  \"CNY\",\n  \"VEF\",\n  \"BDT\",\n  \"HRK\",\n  \"CLP\",\n  \"THB\",\n  \"XAF\",\n  \"ARS\",\n  \"UYU\",\n  \"SZL\",\n  \"KZT\",\n  \"NOK\",\n  \"KES\",\n  \"PAB\",\n  \"INR\",\n  \"CZK\",\n  \"MAD\",\n  \"TWD\",\n  \"PHP\",\n  \"ZAR\",\n  \"BOB\",\n  \"CDF\",\n  \"DASH\",\n  \"VES\",\n  \"ISK\",\n  \"MWK\",\n  \"BAM\",\n  \"TTD\",\n  \"XRP\",\n  \"JOD\",\n  \"RSD\",\n  \"HNL\",\n  \"BGN\",\n  \"GTQ\",\n  \"BWP\",\n  \"XMR\",\n  \"MMK\",\n  \"QAR\",\n  \"AOA\",\n  \"KWD\",\n  \"MUR\",\n  \"WUSD\",\n  \"WEUR\",\n  \"WAVES\",\n  \"WTRY\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"AWG\",\n  \"MDL\",\n  \"BTO\",\n  \"EURS\",\n  \"CHFT\",\n  \"MKD\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MVR\",\n  \"VOLLAR\",\n  \"CKUSD\",\n  \"KHR\",\n  \"VUV\",\n  \"BITCNY\",\n  \"QC\",\n  \"BBD\",\n  \"NAD\",\n  \"NPR\",\n  \"PGK\",\n  \"PYG\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"XLM\",\n  \"BNB\",\n  \"SCR\",\n  \"BAT\",\n  \"CRO\",\n  \"HT\",\n  \"KCS\",\n  \"LEO\",\n  \"LINK\",\n  \"MKR\",\n  \"NPXS\",\n  \"OMG\",\n  \"REP\",\n  \"ZB\",\n  \"ZIL\",\n  \"ZRX\",\n  \"BCH\",\n  \"BZD\",\n  \"CUP\",\n  \"CVE\",\n  \"DJF\",\n  \"DZD\",\n  \"ERN\",\n  \"ETB\",\n  \"FJD\",\n  \"FKP\",\n  \"BUSD\",\n  \"ANCT\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"CNYX\",\n  \"IQD\",\n  \"UZS\",\n  \"TND\",\n  \"GGP\",\n  \"XAU\",\n  \"KGS\",\n  \"GIP\",\n  \"JMD\",\n  \"ZEC\",\n  \"USDP\",\n  \"BSV\",\n  \"EMC2\",\n  \"SNT\",\n  \"GTO\",\n  \"POWR\",\n  \"EUSD\",\n  \"EURT\",\n  \"BCY\",\n  \"BTS\",\n  \"ATM\",\n  \"BLOCKPAY\",\n  \"ARDR\",\n  \"AMP\",\n  \"B2X\",\n  \"BITGOLD\",\n  \"BITEUR\",\n  \"ATB\",\n  \"BITUSD\",\n  \"AGRS\",\n  \"DFXT\",\n  \"HIKEN\",\n  \"BIX\",\n  \"KNC\",\n  \"EOS\",\n  \"COB\",\n  \"COSS\",\n  \"BMH\",\n  \"NANO\",\n  \"BDG\",\n  \"BNT\",\n  \"XVG\",\n  \"LKK1Y\",\n  \"LKK\",\n  \"USDK\",\n  \"EURN\",\n  \"NZDT\",\n  \"JSE\",\n  \"GMD\",\n  \"GNF\",\n  \"GYD\",\n  \"YER\",\n  \"XPF\",\n  \"HTG\",\n  \"SLL\",\n  \"SOS\",\n  \"WST\",\n  \"SVC\",\n  \"SYP\",\n  \"NEO\",\n  \"KMF\",\n  \"JUMP\",\n  \"AYA\",\n  \"BLAST\",\n  \"WGR\",\n  \"BCN\",\n  \"BTG\",\n  \"URALS\",\n  \"INN\",\n  \"USDQ\",\n  \"CNH\",\n  \"HUSD\",\n  \"BKRW\",\n  \"NZDX\",\n  \"EURX\",\n  \"CADX\",\n  \"USDEX\",\n  \"JPYX\",\n  \"AUDX\",\n  \"VNDC\",\n  \"EON\",\n  \"GBPX\",\n  \"CHFX\",\n  \"USDJ\",\n  \"IDRT\",\n  \"USDS\",\n  \"USDN\",\n  \"BIDR\",\n  \"IDK\",\n  \"BSD\",\n  \"BTN\",\n  \"KYD\",\n  \"NIO\",\n  \"SBD\",\n  \"SDG\",\n  \"SHP\",\n  \"TOP\",\n  \"XCD\",\n  \"XCHF\",\n  \"CNYT\",\n  \"GYEN\",\n  \"ZUSD\",\n  \"GOLD\",\n  \"TRX\",\n  \"TRYB\",\n  \"PLATC\",\n  \"STRAX\",\n  \"UST\",\n  \"GLM\",\n  \"VAI\",\n  \"BRZ\",\n  \"DDRST\",\n  \"XAUT\",\n  \"MIM\",\n];\n\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\n    \"AUD\",\n    \"BGN\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CNY\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EGP\",\n    \"EUR\",\n    \"GBP\",\n    \"HKD\",\n    \"HRK\",\n    \"IDR\",\n    \"ILS\",\n    \"JPY\",\n    \"JOD\",\n    \"KES\",\n    \"KRW\",\n    \"KWD\",\n    \"LKR\",\n    \"MAD\",\n    \"MXN\",\n    \"MYR\",\n    \"NGN\",\n    \"NOK\",\n    \"NZD\",\n    \"OMR\",\n    \"PEN\",\n    \"PKR\",\n    \"PLN\",\n    \"RON\",\n    \"RUB\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TWD\",\n    \"USD\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"AUD\",\n    \"CAD\",\n    \"NZD\",\n    \"ARS\",\n    \"BRL\",\n    \"CHF\",\n    \"CLP\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"HKD\",\n    \"ILS\",\n    \"INR\",\n    \"ISK\",\n    \"JPY\",\n    \"KRW\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"PHP\",\n    \"PLN\",\n    \"SEK\",\n    \"THB\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\n    \"ARS\",\n    \"AUD\",\n    \"BBD\",\n    \"BGN\",\n    \"BMD\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CLP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EUR\",\n    \"FJD\",\n    \"FKP\",\n    \"GBP\",\n    \"GIP\",\n    \"HRK\",\n    \"HUF\",\n    \"IDR\",\n    \"ILS\",\n    \"ISK\",\n    \"JMD\",\n    \"JPY\",\n    \"KES\",\n    \"KRW\",\n    \"MDL\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"NZD\",\n    \"PEN\",\n    \"PHP\",\n    \"PLN\",\n    \"PYG\",\n    \"RON\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TZS\",\n    \"USD\",\n    \"ZAR\",\n  ],\n};\n\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nexport function supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter((currency) => cryptoCompareCurrenciesSet.has(currency));\n}\n","import { EMBED_TRANSLATION_ITEM, IPaymentProvider, LocaleLinks, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, WALLET_VERIFIERS } from \"./interfaces\";\nimport { supportedFiatCurrencies } from \"./supportedCurrencies\";\n\nconst paymentProviders = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"aave\", display: \"AAVE\" },\n        { value: \"bat\", display: \"BAT\" },\n        { value: \"dai\", display: \"DAI\" },\n        { value: \"eth\", display: \"ETH\" },\n        { value: \"mkr\", display: \"MKR\" },\n        { value: \"matic\", display: \"MATIC\" },\n        { value: \"usdt\", display: \"USDT\" },\n        { value: \"usdc\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"eth_polygon\", display: \"ETH\" },\n        { value: \"matic_polygon\", display: \"MATIC\" },\n        { value: \"usdc_polygon\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"bnb_bsc\", display: \"BNB\" },\n        { value: \"busd_bsc\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"avax_cchain\", display: \"AVAX\" }],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"UNI\", display: \"UNI\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MUSDC\", display: \"USDC\" }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAXC\", display: \"AVAXC\" }],\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"MATIC_DAI\", display: \"DAI\" },\n        { value: \"MATIC_MATIC\", display: \"MATIC\" },\n        { value: \"MATIC_USDC\", display: \"USDC\" },\n      ],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"DAI\", display: \"DAI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"1INCH\", display: \"1INCH\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"WETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n    },\n    includeFees: true,\n    enforceMax: true,\n  } as IPaymentProvider,\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Upbond\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Upbond zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Upbondにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Upbond에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nconst DID_STREAM_NAME = {\n  RESULT: \"did_listen_result\",\n  REQUEST: \"did_listen_request\",\n};\n\nexport default {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`,\n  DID_STREAM_NAME,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@ansugroup/timing-safe-equal\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto-browserify\");","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-console */\n/* eslint-disable prefer-const */\n\nimport timingSafeEqual from \"@ansugroup/timing-safe-equal\";\nimport { ObjectMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport * as crypto from \"crypto-browserify\";\n\n// import * as ethers from \"ethers\";\n// import Web3Token from \"web3-token\";\nimport config from \"./config\";\nimport UpbondInpageProvider from \"./inpage-provider\";\n// import { ConsentDidResponse } from \"./interfaces\";\n\nexport default class Consent {\n  communicationMux: ObjectMultiplex;\n\n  provider: UpbondInpageProvider;\n\n  consentConfigurations: {\n    scopes: string[];\n    enabled: boolean;\n  };\n\n  flowConfig: string;\n\n  publicKey: string;\n\n  isLoggedIn: boolean;\n\n  didIntervalRequest: number;\n\n  isDidDeployed: boolean;\n\n  consentStreamName: { consent: string; listenerStream: string; getConsentData: string };\n\n  didCreationCb: Record<any, any>;\n\n  constructor({\n    publicKey,\n    scope,\n    consentStream,\n    provider,\n    isLoggedIn = false,\n    didIntervalRequest = 5000,\n  }: {\n    publicKey: string;\n    scope: string[];\n    consentStream: ObjectMultiplex;\n    provider: UpbondInpageProvider;\n    isLoggedIn?: boolean;\n    didIntervalRequest?: number;\n  }) {\n    if (publicKey) {\n      this.didIntervalRequest = didIntervalRequest;\n      this.isLoggedIn = isLoggedIn;\n      this.consentConfigurations = {\n        enabled: false,\n        scopes: scope,\n      };\n      this.flowConfig = \"normal\";\n      this.publicKey = publicKey;\n      this.communicationMux = consentStream;\n      this.provider = provider;\n      this.isDidDeployed = false;\n      this.consentStreamName = {\n        consent: \"consent\",\n        listenerStream: \"did_listener_stream\",\n        getConsentData: \"did_get_consent_data\",\n      };\n      this.didCreationCb = {};\n\n      this.listenDidCreation();\n    }\n  }\n\n  init() {\n    if (!this.publicKey) {\n      throw new Error(`Missing secret public key`);\n    }\n    if (!this.consentConfigurations.scopes || this.consentConfigurations.scopes.length === 0) {\n      throw new Error(`Missing scope`);\n    }\n    console.log(`Consent management ready to go`);\n    this.consentConfigurations.enabled = true;\n    const stream = this.communicationMux.getStream(this.consentStreamName.consent) as Substream;\n    stream.write({\n      name: \"init\",\n      data: {\n        scope: this.consentConfigurations.scopes,\n        publicKey: this.publicKey,\n        host: window.location.host,\n      },\n    });\n  }\n\n  getDid(): Promise<{\n    jwt: string;\n    jwtPresentation: string;\n  }> {\n    return new Promise((resolve, reject) => {\n      const stream = this.communicationMux.getStream(this.consentStreamName.consent) as Substream;\n      stream.write({\n        name: \"request\",\n        data: {\n          scope: this.consentConfigurations.scopes,\n          publicKey: this.publicKey,\n          host: window.location.host,\n        },\n      });\n      stream.on(\"data\", (data) => {\n        if (data.name === \"error\") {\n          if (data.data.code && data.data.code === 401) {\n            this.isDidDeployed = false;\n            this.didCreationCb = data.data.params;\n            resolve({\n              jwt: \"\",\n              jwtPresentation: \"\",\n            });\n          }\n          reject(new Error(data.data.msg));\n        } else {\n          this.isDidDeployed = true;\n          resolve(data.data);\n        }\n      });\n    });\n  }\n\n  // requestDIDCreationOrFilledForm(clientId: string, params: { [x: string]: any }, secKey: string): Promise<ConsentDidResponse> {\n  //   return new Promise((resolve, reject) => {\n  //     try {\n  //       const ethProvider = new ethers.providers.Web3Provider(this.provider);\n  //       const signer = ethProvider.getSigner();\n  //       Web3Token.sign(\n  //         async (msg: string) => {\n  //           const data = {\n  //             domain: \"example.com\",\n  //             scope: this.consentConfigurations.scopes,\n  //             type: \"did_creation_request\",\n  //             data: {\n  //               clientId,\n  //               clientSecret: secKey,\n  //               params,\n  //             },\n  //             expires_in: \"3 days\",\n  //             msg,\n  //           };\n  //           const tx = await signer.signMessage(JSON.stringify(data));\n  //           return tx;\n  //         },\n  //         {\n  //           domain: \"example.com\",\n  //           expires_in: \"3 days\",\n  //         }\n  //       );\n  //       const stream = this.communicationMux.getStream(\"consent\") as Substream;\n  //       stream.on(\"data\", (data) => {\n  //         if (data.name === \"consent_response\") {\n  //           resolve(data.data);\n  //         } else if (data.name === \"consent_error\") {\n  //           reject(data.data.msg);\n  //         }\n  //       });\n  //       stream.on(\"error\", (err) => {\n  //         reject(err);\n  //       });\n  //     } catch (error) {\n  //       if (error.message && error.message.includes(\"user rejected signing\")) {\n  //         reject(new Error(\"User rejected your request\"));\n  //       }\n  //       reject(error);\n  //     }\n  //   });\n  // }\n\n  // requestUserData(did: { jwt: string; jwtPresentation: string }, cb?: (stream: Substream) => void): Promise<ConsentDidResponse> {\n  //   return new Promise((resolve, reject) => {\n  //     if (!this.isDidDeployed || (did.jwt === \"\" && did.jwtPresentation === \"\")) {\n  //       const data = this.requestDIDCreationOrFilledForm(\n  //         this.consentApiKey,\n  //         Object.keys(this.didCreationCb).length > 0 ? this.didCreationCb : {},\n  //         this.key\n  //       );\n  //       resolve(data);\n  //       return;\n  //     }\n  //     if (cb && typeof cb !== \"function\") {\n  //       reject(new Error(`Callback must be a function`));\n  //     }\n  //     if (!did || !did.jwt || !did.jwtPresentation) {\n  //       reject(new Error(`Missing did object`));\n  //     }\n  //     const { jwt, jwtPresentation } = did;\n  //     const stream = this.communicationMux.getStream(\"consent\") as Substream;\n  //     try {\n  //       const ethProvider = new ethers.providers.Web3Provider(this.provider);\n  //       const signer = ethProvider.getSigner();\n  //       Web3Token.sign(\n  //         async (msg: string) => {\n  //           const data = {\n  //             domain: this.isLocalhost() ? \"example.com\" : new URL(window.location.origin).hostname,\n  //             scope: this.consentConfigurations.scopes,\n  //             type: \"consent_request\",\n  //             data: {\n  //               vc: jwt,\n  //               vp: jwtPresentation,\n  //             },\n  //             expires_in: \"3 days\",\n  //             msg,\n  //           };\n  //           const tx = await signer.signMessage(JSON.stringify(data));\n  //           return tx;\n  //         },\n  //         {\n  //           domain: this.isLocalhost() ? \"example.com\" : new URL(window.location.origin).hostname,\n  //           expires_in: \"3 days\",\n  //         }\n  //       );\n  //       if (cb) {\n  //         const consentStream = this.communicationMux.getStream(\"consent_stream\") as Substream;\n  //         cb(consentStream);\n  //       }\n  //       stream.on(\"data\", (data) => {\n  //         if (data.name === \"consent_response\") {\n  //           resolve(data.data);\n  //           stream.destroy();\n  //         } else if (data.name === \"consent_error\") {\n  //           reject(data.data.msg);\n  //           stream.destroy();\n  //         }\n  //       });\n  //       stream.on(\"error\", (err) => {\n  //         reject(err);\n  //         stream.destroy();\n  //       });\n  //     } catch (error) {\n  //       if (error.message && error.message.includes(\"user rejected signing\")) {\n  //         reject(new Error(\"User rejected your request\"));\n  //         stream.destroy();\n  //       }\n  //       reject(error);\n  //       stream.destroy();\n  //     }\n  //   });\n  // }\n\n  // getUserData(): Promise<ConsentDidResponse> {\n  //   return new Promise((resolve, reject) => {\n  //     const stream = this.communicationMux.getStream(this.consentStreamName.getConsentData) as Substream;\n  //     stream.write({\n  //       name: this.consentStreamName.getConsentData,\n  //       data: {\n  //         clientId: this.consentApiKey,\n  //         secretKey: this.key,\n  //         origin: window.location.origin,\n  //       },\n  //     });\n  //     stream.on(\"data\", (ev) => {\n  //       if (ev.name === \"result\") {\n  //         resolve(ev.data);\n  //       }\n  //       reject(new Error(\"Consent does not exist\"));\n  //     });\n  //   });\n  // }\n\n  protected listenDidCreation() {\n    const stream = this.communicationMux.getStream(this.consentStreamName.listenerStream) as Substream;\n    stream.write({\n      name: config.DID_STREAM_NAME.REQUEST,\n      data: {\n        interval: this.didIntervalRequest,\n      },\n    });\n    stream.on(\"data\", (ev) => {\n      if (ev.name && ev.name === config.DID_STREAM_NAME.RESULT) {\n        if (ev.data) {\n          this.isDidDeployed = true;\n        } else {\n          this.isDidDeployed = false;\n        }\n      }\n    });\n  }\n\n  protected isLocalhost(): boolean {\n    return new URL(window.location.origin).hostname === \"localhost\";\n  }\n\n  protected _createDigest(encodedData: crypto.BinaryLike, format: crypto.BinaryToTextEncoding) {\n    return crypto.createHmac(\"sha256\", this.publicKey).update(encodedData).digest(format);\n  }\n\n  protected _decode(value: string) {\n    let [encodedData, sourceDigest] = value.split(\"!\");\n    if (!encodedData || !sourceDigest) throw new Error(\"invalid value(s)\");\n    const json = Buffer.from(encodedData, \"base64\").toString(\"utf8\");\n    const decodedData = JSON.parse(json);\n    const checkDigest = this._createDigest(encodedData, \"base64\");\n    const digestsEqual = timingSafeEqual(sourceDigest, checkDigest);\n    if (!digestsEqual) throw new Error(\"invalid value(s)\");\n    return decodedData;\n  }\n}\n","import { Stream } from \"pump\";\n\nexport const runOnLoad = (fn: () => void): Promise<unknown> =>\n  new Promise((resolve, reject) => {\n    if (window.document.body != null) {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    } else {\n      window.document.addEventListener(\"DOMContentLoaded\", () => {\n        Promise.resolve(fn()).then(resolve).catch(reject);\n      });\n    }\n  });\n\nexport const runOnComplete = (fn: () => void): void => {\n  const retry = window.setInterval(() => {\n    if (window.document.readyState === \"complete\") {\n      window.clearInterval(retry);\n      fn();\n    }\n  }, 300);\n};\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n\nexport const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const handleStream = (handle: Stream, eventName: string, handler: (chunk: unknown) => void): void => {\n  const handlerWrapper = (chunk: unknown) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@metamask/obs-store\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eth-rpc-errors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-deep-equal\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"is-stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"torus-embed\");\n","export default {\n  errors: {\n    disconnected: (): string => \"Upbond: Lost connection to Upbond.\",\n    permanentlyDisconnected: (): string => \"Upbond: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: (): string => \"Upbond: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: (method: string): string =>\n      `Upbond: The Upbond Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number, shouldSendMetadata: boolean): string =>\n      `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Upbond: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation:\n      'Upbond: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' +\n      'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation:\n      'Upbond: \"ethereum.send(...)\" is deprecated and may be removed in the future.' +\n      ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close:\n        'Upbond: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' +\n        \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data:\n        'Upbond: The event \"data\" is deprecated and will be removed in the future.' +\n        'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged:\n        'Upbond: The event \"networkChanged\" is deprecated and may be removed in the future.' +\n        ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification:\n        'Upbond: The event \"notification\" is deprecated and may be removed in the future. ' +\n        'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    },\n    publicConfigStore: 'Upbond: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.',\n  },\n};\n","// import { get } from \"@toruslabs/http-helpers\";\nimport { JRPCMiddleware, PendingJRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport {\n  IntegrityParams,\n  LoginConfig,\n  LoginConfigItem,\n  PAYMENT_PROVIDER,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  UPBOND_BUILD_ENV_TYPE,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\n\nconst { paymentProviders } = config;\n\ntype PaymentErrorParams = {\n  fiatValue?: string;\n  selectedCurrency?: string;\n  selectedCryptoCurrency?: string;\n};\n\ntype PaymentErrors = { provider?: string } & PaymentErrorParams;\n\nexport const defaultLoginParam = {\n  \"upbond-line\": {\n    name: \"LINE\",\n    description: \"LINE\",\n    typeOfLogin: \"line\",\n    loginProvider: \"upbond-line\",\n    jwtParameters: {\n      domain: \"https://lzg2dndj.auth.dev.upbond.io\",\n      connection: \"line\",\n      clientId: \"FoQ_Ri8rKSXkHf82GRzZK\",\n      scope: \"openid email profile offline_access\",\n    },\n    clientId: \"BGbtA2oA0SYvm1fipIPaSgSTPfGJG8Q6Ep_XHuZY9qQVW5jUXTMd0l8xVtXPx91aCmFfuVqTZt9CK79BgHTNanU\",\n    showOnModal: true,\n    showOnDesktop: true,\n    showOnMobile: true,\n    mainOption: true,\n    priority: 1,\n    customLogo: \"line\",\n    logo: \"https://elvira.co.th/wp-content/uploads/2016/02/line-icon.png\",\n    buttonBgColor: \"#289B2A\",\n    buttonTextColor: \"#f3f3f3\",\n  } as LoginConfigItem,\n  \"upbond-google\": {\n    name: \"Google\",\n    description: \"Google\",\n    typeOfLogin: \"jwt\",\n    loginProvider: \"upbond-google\",\n    jwtParameters: {\n      domain: \"https://lzg2dndj.auth.dev.upbond.io\",\n      connection: \"line\",\n      clientId: \"hxFv4SaQVXv3tE_rhe5u9\",\n      scope: \"openid email profile offline_access\",\n    },\n    clientId: \"BGbtA2oA0SYvm1fipIPaSgSTPfGJG8Q6Ep_XHuZY9qQVW5jUXTMd0l8xVtXPx91aCmFfuVqTZt9CK79BgHTNanU\",\n    showOnModal: true,\n    showOnDesktop: true,\n    showOnMobile: true,\n    mainOption: true,\n    priority: 2,\n    customLogo: \"google\",\n    logo: \"https://www.seekpng.com/png/full/788-7887426_google-g-png-google-logo-white-png.png\",\n    buttonBgColor: \"#4B68AE\",\n    buttonTextColor: \"#FFF\",\n  } as LoginConfigItem,\n} as LoginConfig;\n\nexport const defaultLoginParamStg = {\n  \"upbond-line\": {\n    name: \"LINE\",\n    description: \"LINE\",\n    typeOfLogin: \"line\",\n    loginProvider: \"upbond-line\",\n    jwtParameters: {\n      domain: \"https://6a8e4595.auth.stg.upbond.io\",\n      connection: \"line\",\n      clientId: \"YQvxSsSNOIFgoEwZoiPdm\",\n      scope: \"openid email profile offline_access\",\n    },\n    clientId: \"BGbtA2oA0SYvm1fipIPaSgSTPfGJG8Q6Ep_XHuZY9qQVW5jUXTMd0l8xVtXPx91aCmFfuVqTZt9CK79BgHTNanU\",\n    showOnModal: true,\n    showOnDesktop: true,\n    showOnMobile: true,\n    mainOption: true,\n    priority: 1,\n    customLogo: \"line\",\n    logo: \"https://elvira.co.th/wp-content/uploads/2016/02/line-icon.png\",\n    buttonBgColor: \"#289B2A\",\n    buttonTextColor: \"#f3f3f3\",\n  } as LoginConfigItem,\n  \"upbond-google\": {\n    name: \"Google\",\n    description: \"Google\",\n    typeOfLogin: \"jwt\",\n    loginProvider: \"upbond-google\",\n    jwtParameters: {\n      domain: \"https://6a8e4595.auth.stg.upbond.io\",\n      connection: \"line\",\n      clientId: \"zYvDxb22eVYLqDMAp_ql9\",\n      scope: \"openid email profile offline_access\",\n    },\n    clientId: \"BGbtA2oA0SYvm1fipIPaSgSTPfGJG8Q6Ep_XHuZY9qQVW5jUXTMd0l8xVtXPx91aCmFfuVqTZt9CK79BgHTNanU\",\n    showOnModal: true,\n    showOnDesktop: true,\n    showOnMobile: true,\n    mainOption: true,\n    priority: 2,\n    customLogo: \"google\",\n    logo: \"https://www.seekpng.com/png/full/788-7887426_google-g-png-google-logo-white-png.png\",\n    buttonBgColor: \"#4B68AE\",\n    buttonTextColor: \"#FFF\",\n  } as LoginConfigItem,\n} as LoginConfig;\n\nexport const defaultLoginParamProd = {\n  \"upbond-line\": {\n    name: \"LINE\",\n    description: \"LINE\",\n    typeOfLogin: \"line\",\n    loginProvider: \"upbond-line\",\n    jwtParameters: {\n      domain: \"https://auth.upbond.io\",\n      connection: \"line\",\n      clientId: \"wa3wjaB0dx0RO9AgzngM-\",\n      scope: \"openid email profile offline_access\",\n    },\n    clientId: \"BKmNTSQ7y8yWyhNT_W5BobaAu7Re-zLW6fzK0bzdvjP9a-G4OP8ajriQJHFOH3ypvRIJeEp_O40aag-7iNTyp-s\",\n    showOnModal: true,\n    showOnDesktop: true,\n    showOnMobile: true,\n    mainOption: true,\n    priority: 1,\n    customLogo: \"line\",\n    logo: \"https://elvira.co.th/wp-content/uploads/2016/02/line-icon.png\",\n    buttonBgColor: \"#289B2A\",\n    buttonTextColor: \"#f3f3f3\",\n  } as LoginConfigItem,\n  \"upbond-google\": {\n    name: \"Google\",\n    description: \"Google\",\n    typeOfLogin: \"jwt\",\n    loginProvider: \"upbond-google\",\n    jwtParameters: {\n      domain: \"https://auth.upbond.io\",\n      connection: \"line\",\n      clientId: \"hxFv4SaQVXv3tE_rhe5u9\",\n      scope: \"openid email profile offline_access\",\n    },\n    clientId: \"BKmNTSQ7y8yWyhNT_W5BobaAu7Re-zLW6fzK0bzdvjP9a-G4OP8ajriQJHFOH3ypvRIJeEp_O40aag-7iNTyp-s\",\n    showOnModal: true,\n    showOnDesktop: true,\n    showOnMobile: true,\n    mainOption: true,\n    priority: 2,\n    customLogo: \"google\",\n    logo: \"https://www.seekpng.com/png/full/788-7887426_google-g-png-google-logo-white-png.png\",\n    buttonBgColor: \"#4B68AE\",\n    buttonTextColor: \"#FFF\",\n  } as LoginConfigItem,\n} as LoginConfig;\n\nexport const validatePaymentProvider = (provider: string, params: PaymentParams): { errors: PaymentErrors; isValid: boolean } => {\n  const errors: PaymentErrors = {};\n\n  if (!provider) {\n    return { errors, isValid: true };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n\n  const selectedProvider = paymentProviders[provider as PAYMENT_PROVIDER_TYPE];\n  const selectedParams = params || {};\n\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax)\n      errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain)\n      .flat()\n      .map((currency) => currency.value);\n\n    const finalCryptoCurrency =\n      provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency))\n      errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return { errors, isValid: Object.keys(errors).length === 0 };\n};\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: PendingJRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      reject(error || response.error);\n    } else {\n      resolve(!unwrapResult || Array.isArray(response) ? response : response.result);\n    }\n  };\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nexport const getUpbondWalletUrl = async (\n  buildEnv: UPBOND_BUILD_ENV_TYPE,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  integrity: IntegrityParams\n): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  log.info(\"Opening torus URL!\");\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    /*\n    Default the default to v2\n    */\n    case \"production\":\n    case \"v1_production\":\n    case \"v2_production\":\n      torusUrl = `https://login.upbond.io`;\n      logLevel = \"info\";\n      break;\n    case \"staging\":\n    case \"v1_staging\":\n    case \"v2_staging\":\n      torusUrl = \"https://login.stg.upbond.io\";\n      logLevel = \"info\";\n      break;\n    case \"development\":\n    case \"v1_development\":\n    case \"v2_development\":\n    case \"testing\":\n      torusUrl = \"https:/login.dev.upbond.io\";\n      logLevel = \"debug\";\n      break;\n    case \"local\":\n    case \"v2_local\":\n      torusUrl = \"https://login3-made.dev.upbond.io\";\n      logLevel = \"debug\";\n      break;\n    case \"wallet-did\":\n      torusUrl = \"https://wallet-did.dev.upbond.io\";\n      logLevel = \"debug\";\n      break;\n    case \"mpc-dev\":\n      torusUrl = \"https://login-mpc.dev.upbond.io\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://login.upbond.io`;\n      logLevel = \"info\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nexport const FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nexport const FEATURES_DEFAULT_POPUP_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=1200\";\nexport const FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const searchToObject = <T>(search): T => {\n  return search\n    .substring(1)\n    .split(\"&\")\n    .reduce(function (result, value) {\n      const parts = value.split(\"=\");\n      if (parts[0]) result[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n      return result as T;\n    }, {});\n};\n","import { ObservableStore, storeAsStream } from \"@metamask/obs-store\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  JRPCSuccess,\n  ObjectMultiplex,\n  SafeEventEmitter,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError, ethErrors } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport {\n  BaseProviderState,\n  JsonRpcConnection,\n  Maybe,\n  ProviderOptions,\n  PublicConfigState,\n  RequestArguments,\n  SendSyncJsonRpcRequest,\n  SentWarningsState,\n  UnvalidatedJsonRpcRequest,\n  WalletProviderState,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, EMITTED_NOTIFICATIONS, logStreamDisconnectWarning, NOOP } from \"./utils\";\n\nSafeEventEmitter.defaultMaxListeners = 100;\n\n// resolve response.result, reject errors\nconst getRpcPromiseCallback =\n  (resolve, reject, unwrapResult = true) =>\n  (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n\nclass UpbondInpageProvider extends SafeEventEmitter {\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  _rpcEngine: JRPCEngine;\n\n  public networkVersion: string | null;\n\n  shouldSendMetadata: boolean;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isUpbond: true;\n\n  _publicConfigStore: ObservableStore<PublicConfigState>;\n\n  tryPreopenHandle: (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  enable: () => Promise<string[]>;\n\n  protected _state: BaseProviderState;\n\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    publicConfigStore: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, shouldSendMetadata = true, jsonRpcStreamName = \"provider\" }: ProviderOptions = {}\n  ) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isUpbond = true;\n    this.setMaxListeners(maxEventListeners);\n\n    // private state\n    this._state = {\n      ...UpbondInpageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({ storageKey: \"Metamask-Config\" });\n\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    pump(\n      mux.createStream(\"publicConfig\") as unknown as Duplex,\n      storeAsStream(this._publicConfigStore),\n      // RPC requests should still work if only this stream fails\n      logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")\n    );\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    // connect to async provider\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore(): ObservableStore<PublicConfigState> {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T>(args: RequestArguments): Promise<Maybe<T>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked, networkVersion } = (await this.request({\n        method: \"wallet_getProviderState\",\n      })) as WalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n      throw new Error(error);\n    } finally {\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   * ::dwiyan::\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], callback: (...args: any[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<T>(method: string, params?: T[]): Promise<JRPCResponse<T>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<T>(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<T>) => void): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<T>(payload: SendSyncJsonRpcRequest): JRPCResponse<T>;\n\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({ method: methodOrPayload, params: callbackOrArgs }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload as JRPCRequest<unknown>, callbackOrArgs as (...args: unknown[]) => void);\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload: SendSyncJsonRpcRequest): JRPCSuccess<unknown> {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId, networkVersion }: { chainId?: string; networkVersion?: string } = {}): void {\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", { chainId, networkVersion });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n\nexport default UpbondInpageProvider;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"create-hash\");","import createHash from \"create-hash\";\n\nimport { IHashAlgorithmOptions, SRI } from \"./interfaces\";\n\nconst defaults = (options: IHashAlgorithmOptions) => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false,\n});\n\n// Generate list of hashes\nconst hashes = (options: IHashAlgorithmOptions, data: string): Record<createHash.algorithm, string> => {\n  const internalHashes: Record<string, string> = {};\n  options.algorithms.forEach((algorithm) => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n};\n// Build an integrity string\nconst integrity = (options: IHashAlgorithmOptions, sri: SRI): string => {\n  let output = \"\";\n\n  // Hash list\n  output += Object.keys(sri.hashes)\n    .map((algorithm: createHash.algorithm) => `${algorithm}-${sri.hashes[algorithm]}`)\n    .join(options.delimiter);\n\n  return output;\n};\n\nconst main = (options: IHashAlgorithmOptions, data: string): SRI | string => {\n  // Defaults\n  const finalOptions = defaults(options);\n\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined,\n  };\n  sri.integrity = integrity(finalOptions, sri);\n\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nexport default main;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","import { EventEmitter } from \"events\";\n\nimport { getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends EventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, \"_blank\");\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { getPreopenInstanceId, NOOP } from \"./utils\";\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\n/**\n * Sends site metadata over an RPC request.\n */\nexport default async function sendSiteMetadata(engine: JRPCEngine): Promise<void> {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata,\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error,\n    });\n  }\n}\n","/* eslint-disable no-console */\nimport { get, setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, JRPCRequest, ObjectMultiplex, setupMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport deepmerge from \"lodash.merge\";\n\nimport configuration from \"./config\";\nimport Consent from \"./consent\";\nimport { documentReady, handleStream, htmlToElement, runOnLoad } from \"./embedUtils\";\nimport UpbondInpageProvider from \"./inpage-provider\";\nimport generateIntegrity from \"./integrity\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  EMBED_TRANSLATION_ITEM,\n  IUpbondEmbedParams,\n  LOGIN_PROVIDER,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusPublicKey,\n  UnvalidatedJsonRpcRequest,\n  UPBOND_BUILD_ENV,\n  UserInfo,\n  VerifierArgs,\n  WALLET_OPENLOGIN_VERIFIER_MAP,\n  WALLET_PATH,\n  WhiteLabelParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport sendSiteMetadata from \"./siteMetadata\";\nimport {\n  defaultLoginParam,\n  defaultLoginParamProd,\n  defaultLoginParamStg,\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPreopenInstanceId,\n  getUpbondWalletUrl,\n  getUserLanguage,\n  searchToObject,\n  validatePaymentProvider,\n} from \"./utils\";\n\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true,\n};\n\nconst iframeIntegrity = \"sha384-RhqFseQpufEgNnJYPxNXx+EmyE55iWEWJwkgS7QX/pit6STKFZRf9K9kwmfpDIPw\";\n\nconst expectedCacheControlHeader = \"max-age=3600\";\n\nconst UNSAFE_METHODS = [\n  \"eth_sendTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"personal_sign\",\n  \"eth_getEncryptionPublicKey\",\n  \"eth_decrypt\",\n];\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const upbondIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getUpbondWalletUrl(\"production\", { check: false, hash: iframeIntegrity, version: \"\" });\n    upbondIframeHtml.href = `${torusUrl}/popup`;\n    upbondIframeHtml.crossOrigin = \"anonymous\";\n    upbondIframeHtml.type = \"text/html\";\n    upbondIframeHtml.rel = \"prefetch\";\n    // if (upbondIframeHtml.relList && upbondIframeHtml.relList.supports) {\n    //   if (upbondIframeHtml.relList.supports(\"prefetch\")) {\n    //     log.info(\"IFrame loaded\");\n    //     document.head.appendChild(upbondIframeHtml);\n    //   }\n    // }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nexport const ACCOUNT_TYPE = {\n  NORMAL: \"normal\",\n  THRESHOLD: \"threshold\",\n  IMPORTED: \"imported\",\n};\n\nclass Upbond {\n  buttonPosition: BUTTON_POSITION_TYPE = BUTTON_POSITION.BOTTOM_LEFT;\n\n  buttonSize: number;\n\n  torusUrl: string;\n\n  upbondIframe: HTMLIFrameElement;\n\n  skipDialog: boolean;\n\n  styleLink: HTMLLinkElement;\n\n  isLoggedIn: boolean;\n\n  isInitialized: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  apiKey: string;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  torusAlertContainer: HTMLDivElement;\n\n  isIframeFullScreen: boolean;\n\n  whiteLabel: WhiteLabelParams;\n\n  requestedVerifier: string;\n\n  currentVerifier: string;\n\n  embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  ethereum: UpbondInpageProvider;\n\n  provider: UpbondInpageProvider;\n\n  communicationMux: ObjectMultiplex;\n\n  isUsingDirect: boolean;\n\n  isLoginCallback: () => void;\n\n  dappRedirectUrl: string;\n\n  paymentProviders = configuration.paymentProviders;\n\n  selectedVerifier: string;\n\n  buildEnv: (typeof UPBOND_BUILD_ENV)[keyof typeof UPBOND_BUILD_ENV];\n\n  widgetConfig: { showAfterLoggedIn: boolean; showBeforeLoggedIn: boolean };\n\n  consent: Consent | null;\n\n  consentConfiguration: {\n    enable: boolean;\n    config: {\n      publicKey: string;\n      scope: string[];\n      origin: string;\n    };\n  };\n\n  flowConfig: string;\n\n  private loginHint = \"\";\n\n  private useWalletConnect: boolean;\n\n  private isCustomLogin = false;\n\n  constructor(opts: TorusCtorArgs = {}) {\n    this.buttonPosition = opts.buttonPosition || \"bottom-left\";\n    this.buttonSize = opts.buttonSize || 56;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.apiKey = opts.apiKey || \"torus-default\";\n    setAPIKey(this.apiKey);\n    this.modalZIndex = opts.modalZIndex || 999999;\n    this.alertZIndex = this.modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.isUsingDirect = false;\n    this.buildEnv = \"production\";\n    this.widgetConfig = {\n      showAfterLoggedIn: true,\n      showBeforeLoggedIn: false,\n    };\n  }\n\n  async init({\n    buildEnv = UPBOND_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    // deprecated: use loginConfig instead\n    enabledVerifiers = defaultVerifiers,\n    network = {\n      host: \"matic\",\n      chainId: 137,\n      networkName: \"Polygon\",\n      blockExplorer: \"https://polygonscan.com/\",\n      ticker: \"MATIC\",\n      tickerName: \"MATIC\",\n      rpcUrl: \"https://polygon-rpc.com\",\n    },\n    loginConfig = defaultLoginParam,\n    widgetConfig = this.widgetConfig, // default widget config\n    integrity = {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\",\n    },\n    whiteLabel,\n    skipTKey = false,\n    useWalletConnect = false,\n    isUsingDirect = true,\n    mfaLevel = \"default\",\n    selectedVerifier,\n    skipDialog = false,\n    dappRedirectUri = window.location.origin,\n    consentConfiguration = {\n      enable: false,\n      config: {\n        publicKey: \"\",\n        scope: [],\n        origin: \"\",\n      },\n    },\n    flowConfig = \"normal\",\n    state = \"\",\n  }: IUpbondEmbedParams = {}): Promise<void> {\n    // Send WARNING for deprecated buildEnvs\n    // Give message to use others instead\n    let buildTempEnv = buildEnv;\n    if (buildEnv === \"v2_development\") {\n      console.log(\n        `%c [UPBOND-EMBED] WARNING! This buildEnv is deprecating soon. Please use 'UPBOND_BUILD_ENV.DEVELOPMENT' instead to point wallet on DEVELOPMENT environment.`,\n        \"color: #FF0000\"\n      );\n      console.log(`More information, please visit https://github.com/upbond/embed`);\n      buildTempEnv = \"development\";\n    }\n    if (buildEnv === \"v2_production\") {\n      console.log(\n        `%c [UPBOND-EMBED] WARNING! This buildEnv is deprecating soon. Please use 'UPBOND_BUILD_ENV.PRODUCTION' instead to point wallet on PRODUCTION environment.`,\n        \"color: #FF0000\"\n      );\n      console.log(`More information, please visit https://github.com/upbond/embed`);\n      buildTempEnv = \"production\";\n    }\n\n    if (buildEnv.includes(\"v1\")) {\n      console.log(\n        `%c [UPBOND-EMBED] WARNING! This buildEnv is deprecating soon. Please use 'UPBOND_BUILD_ENV.LOCAL|DEVELOPMENT|STAGING|PRODUCTION' instead to point wallet on each environment`,\n        \"color: #FF0000\"\n      );\n      console.log(`More information, please visit https://github.com/upbond/embed`);\n    }\n\n    buildEnv = buildTempEnv;\n    log.info(`Using buildEnv: `, buildEnv);\n\n    // Enable/Disable logging\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n\n    // Check env staging / production, set LoginConfig\n    let loginConfigTemp = loginConfig;\n    if (JSON.stringify(loginConfig) === JSON.stringify(defaultLoginParam)) {\n      // For development, using the defaultloginparam\n      // For staging, using defaultLoginParamStg\n      if (buildEnv.includes(\"staging\")) loginConfigTemp = defaultLoginParamStg;\n      // For production, using defaultLoginParamProd\n      if (buildEnv.includes(\"production\")) loginConfigTemp = defaultLoginParamProd;\n      loginConfig = loginConfigTemp;\n    }\n    log.info(`Using login config: `, loginConfig);\n    log.info(`Using network config: `, network);\n\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n\n    const { torusUrl, logLevel } = await getUpbondWalletUrl(buildEnv, integrity);\n\n    log.info(`Url Loaded: ${torusUrl} with log: ${logLevel}`);\n\n    if (selectedVerifier) {\n      try {\n        const isAvailableOnLoginConfig = loginConfig[selectedVerifier];\n        if (isAvailableOnLoginConfig) {\n          this.selectedVerifier = selectedVerifier;\n        } else {\n          throw new Error(\"Selected verifier is not exist on your loginConfig\");\n        }\n      } catch (error) {\n        throw new Error(\"Selected verifier is not exist on your loginConfig\");\n      }\n    }\n\n    this.buildEnv = buildEnv;\n    this.skipDialog = skipDialog;\n    this.dappRedirectUrl = dappRedirectUri;\n    this.isUsingDirect = isUsingDirect;\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n\n    this.consentConfiguration = consentConfiguration;\n    this.flowConfig = flowConfig;\n\n    const upbondIframeUrl = new URL(torusUrl);\n    if (upbondIframeUrl.pathname.endsWith(\"/\")) upbondIframeUrl.pathname += \"popup\";\n    else upbondIframeUrl.pathname += \"/popup\";\n\n    upbondIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}&isRedirect=${isUsingDirect}&dappRedirectUri=${encodeURIComponent(\n      `${dappRedirectUri}`\n    )}`;\n\n    // Iframe code\n    this.upbondIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"upbondIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"upbondIframe\"\n        src=\"${upbondIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n\n    const { defaultLanguage = getUserLanguage(), customTranslations = {} } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.upbondIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          await this._setupWeb3();\n          const initStream = this.communicationMux.getStream(\"init_stream\") as Substream;\n          initStream.on(\"data\", (chunk) => {\n            const { name, data, error } = chunk;\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n              this._displayIframe();\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              widgetConfig: this.widgetConfig,\n              mfaLevel,\n              skipDialog,\n              selectedVerifier,\n              directConfig: {\n                enabled: isUsingDirect,\n                redirectUrl: dappRedirectUri,\n              },\n              consentConfiguration: this.consentConfiguration,\n              flowConfig,\n              state,\n            },\n          });\n        };\n        window.document.body.appendChild(this.upbondIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (!widgetConfig) {\n      log.info(`widgetConfig is not configured. Now using default widget configuration`);\n    } else {\n      this.widgetConfig = widgetConfig;\n    }\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = `${torusUrl}/popup`;\n      const resp = await fetch(fetchUrl, { cache: \"reload\" });\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(`Unexpected Cache-Control headers, got ${resp.headers.get(\"Cache-Control\")}`);\n      }\n      const response = await resp.text();\n      const calculatedIntegrity = generateIntegrity(\n        {\n          algorithms: [\"sha384\"],\n        },\n        response\n      );\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      try {\n        await handleSetup();\n        if (this.consentConfiguration.enable && this.consentConfiguration.config.publicKey) {\n          this.consent = new Consent({\n            publicKey: this.consentConfiguration.config.publicKey,\n            scope: this.consentConfiguration.config.scope,\n            consentStream: this.communicationMux,\n            provider: this.provider,\n            isLoggedIn: this.isLoggedIn,\n          });\n          this.consent.init();\n        } else {\n          this.consent = null;\n        }\n      } catch (error) {\n        console.error(error, \"@errorOnInit\");\n      }\n    }\n    return undefined;\n  }\n\n  login({ verifier = \"\", login_hint: loginHint = \"\" }: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  requestAuthServiceAccessToken(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const stream = this.communicationMux.getStream(\"auth_service\") as Substream;\n      stream.write({\n        name: \"access_token_request\",\n      });\n\n      stream.on(\"data\", (ev) => {\n        if (ev.name !== \"error\") {\n          resolve(ev.data.authServiceAccessToken);\n        } else {\n          reject(ev.data.msg);\n        }\n      });\n    });\n  }\n\n  logout(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.isInitialized) {\n        reject(new Error(\"Please initialize first\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStream = this.communicationMux.getStream(\"status\") as Substream;\n      const statusStreamHandler = (status) => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n\n      // Remove localstorage upbond_login used for caching\n      localStorage.removeItem(\"upbond_login\");\n    });\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.upbondIframe) && window.document.body.contains(this.upbondIframe)) {\n      this.upbondIframe.remove();\n      this.upbondIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideWidget(): void {\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n\n  showWidget(): void {\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n\n  showMenu(): void {\n    this._sendWidgetMenuVisibilityStatus(true);\n    this._displayIframe(true);\n  }\n\n  hideMenu(): void {\n    this._sendWidgetMenuVisibilityStatus(false);\n    this._displayIframe(false);\n  }\n\n  setProvider({ host = \"mainnet\", chainId = null, networkName = \"\", ...rest }: NetworkInterface): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\") as Substream;\n      const handler = (chunk) => {\n        const { err, success } = chunk.data;\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: {\n            host,\n            chainId,\n            networkName,\n            ...rest,\n          },\n          preopenInstanceId,\n          override: false,\n        },\n      });\n    });\n  }\n\n  showWallet(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (chunk) => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n        log.info(`loaded: ${finalUrl}`);\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  showSignTransaction(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (chunk) => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/confirm${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n        log.info(`loaded: ${finalUrl}`);\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress({ verifier, verifierId, isExtended = false }: VerifierArgs): Promise<string | TorusPublicKey> {\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(\n      url.href,\n      {\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n      },\n      { useAPIKey: true }\n    );\n  }\n\n  getUserInfo(message?: string): Promise<UserInfo> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\") as Substream;\n        userInfoAccessStream.write({ name: \"user_info_access_request\" });\n        const userInfoAccessHandler = (chunk) => {\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\") as Substream;\n              const userInfoHandler = (handlerChunk) => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              userInfoStream.write({ name: \"user_info_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  getTkey(message?: string) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const tkeyAccessStream = this.communicationMux.getStream(\"tkey_access\") as Substream;\n        tkeyAccessStream.write({ name: \"tkey_access_request\" });\n        const tkeyAccessHandler = (chunk) => {\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"tkey_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const tkeyInfoStream = this.communicationMux.getStream(\"tkey\") as Substream;\n              const tkeyInfoHandler = (handlerChunk) => {\n                if (handlerChunk.name === \"tkey_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(tkeyInfoStream, \"data\", tkeyInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              tkeyInfoStream.write({ name: \"tkey_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(tkeyAccessStream, \"data\", tkeyAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  getMpcProvider() {\n    return new Promise((resolve, reject) => {\n      const mpcProviderStream = this.communicationMux.getStream(\"mpc_provider_access\") as Substream;\n      mpcProviderStream.write({ name: \"mpc_provider_request\" });\n      const tkeyAccessHandler = (chunk) => {\n        const {\n          name,\n          data: { approved, payload },\n        } = chunk;\n\n        this._displayIframe(true);\n        if (name === \"mpc_provider_response\") {\n          if (approved) {\n            resolve(payload);\n          } else {\n            reject(new Error(\"User rejected the request\"));\n          }\n        }\n      };\n      handleStream(mpcProviderStream, \"data\", tkeyAccessHandler);\n    });\n  }\n\n  sendTransaction(data: any) {\n    return new Promise((resolve, reject) => {\n      this._displayIframe(true);\n      const stream = this.communicationMux.getStream(\"send_transaction_access\") as Substream;\n      stream.write({ name: \"send_transaction_request\", data });\n      const tkeyAccessHandler = (chunk) => {\n        const {\n          name,\n          data: { approved, payload },\n        } = chunk;\n\n        if (name === \"send_transaction_response\") {\n          if (approved) {\n            resolve(payload);\n          } else {\n            reject(new Error(\"User rejected the request\"));\n          }\n        }\n      };\n      handleStream(stream, \"data\", tkeyAccessHandler);\n    });\n  }\n\n  initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const { errors, isValid } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\") as Substream;\n        const topupHandler = (chunk) => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({ name: \"topup_request\", data: { provider, params, preopenInstanceId } });\n      } else reject(new Error(\"Upbond is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: Omit<UserInfo, \"isNewUser\"> }): Promise<void> {\n    const { privateKey, userInfo } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\") as Substream;\n        const loginHandler = (chunk) => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({ name: \"login_with_private_key_request\", data: { privateKey, userInfo } });\n      } else reject(new Error(\"Upbond is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner(): Promise<void> {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\") as Substream;\n        const walletConnectHandler = (chunk) => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({ name: \"wallet_connect_stream_req\" });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  protected _handleWindow(preopenInstanceId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\") as Substream;\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;\n      else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n      const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId,\n        },\n      });\n      const closeHandler = ({ preopenInstanceId: receivedId, close }) => {\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true,\n          },\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  protected _setEmbedWhiteLabel(element: HTMLElement): void {\n    // Set whitelabel\n    const { theme } = this.whiteLabel || {};\n    if (theme) {\n      const { isDark = false, colors = {} } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  protected _getLogoUrl(): string {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  protected _sendWidgetVisibilityStatus(status: boolean): void {\n    const upbondButtonVisibilityStream = this.communicationMux.getStream(\"widget-visibility\") as Substream;\n    upbondButtonVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _sendWidgetMenuVisibilityStatus(status: boolean): void {\n    const upbondButtonVisibilityStream = this.communicationMux.getStream(\"menu-visibility\") as Substream;\n    upbondButtonVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _displayIframe(isFull = false): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.isLoggedIn ? \"block\" : !this.isLoggedIn ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.upbondIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  protected async _setupWeb3(): Promise<void> {\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.upbondIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.upbondIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n\n    // compose the inpage provider\n    const inpageProvider = new UpbondInpageProvider(metamaskStream);\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method, ...args) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({ jsonrpc: \"2.0\", id: getPreopenInstanceId(), method: \"eth_requestAccounts\", params: [] }, (err, response) => {\n          const { result: res } = (response as { result: unknown }) || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const { requestedVerifier } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                  // eslint-disable-next-line promise/always-return\n                  .then((_) => {\n                    this.requestedVerifier = requestedVerifier;\n                    this._showLoginPopup(true, resolve, reject);\n                  })\n                  .catch((error) => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject, this.skipDialog);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (this.buildEnv.includes(\"v1\")) {\n        if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n          const preopenInstanceId = getPreopenInstanceId();\n          this._handleWindow(preopenInstanceId, {\n            target: \"_blank\",\n            features: FEATURES_CONFIRM_WINDOW,\n          });\n          _payload.preopenInstanceId = preopenInstanceId;\n        }\n      }\n      inpageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n\n    this.communicationMux = communicationMux;\n\n    const windowStream = communicationMux.getStream(\"window\") as Substream;\n    windowStream.on(\"data\", (chunk) => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\") as Substream;\n    widgetStream.on(\"data\", async (chunk) => {\n      const { data } = chunk;\n      this._displayIframe(data);\n    });\n\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\") as Substream;\n    statusStream.on(\"data\", (status) => {\n      // login\n      if (status.loggedIn && localStorage.getItem(\"upbond_login\")) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n\n    this.provider = proxiedInpageProvider;\n\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n\n    const getCachedData = localStorage.getItem(\"upbond_login\");\n    if (window.location.search || getCachedData) {\n      let data;\n      if (getCachedData) {\n        data = JSON.parse(getCachedData) ? JSON.parse(getCachedData) : null;\n      }\n      if (window.location.search) {\n        const { loggedIn, rehydrate, selectedAddress, verifier, state } = searchToObject<{\n          loggedIn: string;\n          rehydrate: string;\n          selectedAddress: string;\n          verifier: string;\n          state: string;\n        }>(window.location.search);\n        if (loggedIn !== undefined && rehydrate !== undefined && selectedAddress !== undefined && verifier !== undefined && state !== undefined) {\n          data = { loggedIn, rehydrate, selectedAddress, verifier, state };\n          localStorage.setItem(\"upbond_login\", JSON.stringify(data));\n        }\n      }\n      if (data) {\n        const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n        const isLoggedIn = data.loggedIn === \"true\";\n        const isRehydrate = data.rehydrate === \"true\";\n        let state = \"\";\n\n        if (data.state) {\n          state = data.state;\n        }\n\n        const { selectedAddress, verifier } = data;\n        if (isLoggedIn) {\n          this.isLoggedIn = true;\n          this.currentVerifier = verifier;\n        } else this._displayIframe(true);\n\n        this._displayIframe(true);\n\n        oauthStream.write({ selectedAddress });\n        statusStream.write({ loggedIn: isLoggedIn, rehydrate: isRehydrate, verifier, state });\n\n        await inpageProvider._initializeState();\n\n        if (data.selectedAddress && data.loggedIn && data.state) {\n          const urlParams = new URLSearchParams(window.location.search);\n          urlParams.delete(\"selectedAddress\");\n          urlParams.delete(\"rehydrate\");\n          urlParams.delete(\"loggedIn\");\n          urlParams.delete(\"verifier\");\n          urlParams.delete(\"state\");\n          const newQueryParams = urlParams.toString();\n          const baseUrl = window.location.href.split(\"?\")[0];\n          const newUrl = `${baseUrl}?${newQueryParams}`;\n          window.history.replaceState(null, null, newUrl);\n        }\n      } else {\n        const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n        logOutStream.write({ name: \"logOut\" });\n        const statusStreamHandler = () => {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n        };\n        handleStream(statusStream, \"data\", statusStreamHandler);\n      }\n    } else {\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStreamHandler = () => {\n        this.isLoggedIn = false;\n        this.currentVerifier = \"\";\n        this.requestedVerifier = \"\";\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    }\n  }\n\n  protected _showLoginPopup(calledFromEmbed: boolean, resolve: (a: string[]) => void, reject: (err: Error) => void, skipDialog = false): void {\n    const loginHandler = async (data) => {\n      const { err, selectedAddress } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe(false);\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed,\n          skipDialog,\n          isUsingDirect: this.isUsingDirect,\n          verifier: this.currentVerifier,\n          dappRedirectUrl: this.dappRedirectUrl,\n          selectedVerifier: this.selectedVerifier,\n        },\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint,\n          skipDialog,\n          selectedVerifier: this.selectedVerifier,\n        },\n      });\n    }\n  }\n\n  protected _createPopupBlockAlert(preopenInstanceId: string, url: string): void {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        torusAlert.remove();\n\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n}\n\nexport default Upbond;\n","export { default } from \"./embed\";\nexport { default as UpbondInpageProvider } from \"./inpage-provider\";\nexport * from \"./interfaces\";\n"],"names":["LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_VERIFIERS","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","UPBOND_BUILD_ENV","PRODUCTION","STAGING","DEVELOPMENT","TESTING","LOCAL","V1_DEBUG","V1_LOCAL","V1_DEVELOPMENT","V1_STAGING","V1_PRODUCTION","V2_DEBUG","V2_LOCAL","V2_DEVELOPMENT","V2_STAGING","V2_PRODUCTION","DEBUG","WALLET_DID","MPC_DEV","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","DID_STREAM_NAME","RESULT","REQUEST","supportedVerifierList","Object","values","prodTorusUrl","localStorageKeyPrefix","timingSafeEqual","crypto","config","Consent","constructor","_ref","publicKey","scope","consentStream","isLoggedIn","didIntervalRequest","_defineProperty","consentConfigurations","enabled","scopes","flowConfig","communicationMux","isDidDeployed","consentStreamName","consent","listenerStream","getConsentData","didCreationCb","listenDidCreation","init","Error","length","console","log","stream","getStream","write","name","data","host","window","location","getDid","Promise","resolve","reject","on","code","params","jwt","jwtPresentation","msg","interval","ev","isLocalhost","URL","origin","hostname","_createDigest","encodedData","format","createHmac","update","digest","_decode","sourceDigest","split","json","Buffer","from","toString","decodedData","JSON","parse","checkDigest","digestsEqual","runOnLoad","fn","document","body","then","catch","addEventListener","runOnComplete","retry","setInterval","readyState","clearInterval","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","handle","eventName","handler","_len","arguments","handlerArgs","Array","_key","handlerWrapper","removeEventListener","handleStream","chunk","removeListener","documentReady","loglevel","getLogger","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","networkChanged","notification","publicConfigStore","ethErrors","defaultLoginParam","description","typeOfLogin","loginProvider","jwtParameters","domain","connection","clientId","showOnModal","showOnDesktop","showOnMobile","mainOption","priority","customLogo","logo","buttonBgColor","buttonTextColor","defaultLoginParamStg","defaultLoginParamProd","validatePaymentProvider","isValid","keys","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","rpc","invalidRequest","message","done","getRpcPromiseCallback","unwrapResult","undefined","response","isArray","result","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getUpbondWalletUrl","buildEnv","integrity","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","searchToObject","search","substring","reduce","parts","decodeURIComponent","ObservableStore","storeAsStream","createIdRemapMiddleware","createStreamMiddleware","JRPCEngine","ObjectMultiplex","SafeEventEmitter","EthereumRpcError","dequal","duplex","isDuplexStream","pump","messages","defaultMaxListeners","UpbondInpageProvider","connectionStream","jsonRpcStreamName","enable","experimentalMethods","send","isUpbond","setMaxListeners","_state","_objectSpread","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","_publicConfigStore","storageKey","createStream","ignoreStream","isConnected","jsonRpcConnection","rpcEngine","push","middleware","_rpcEngine","payload","type","_sentWarnings","args","callback","addListener","listener","once","prependListener","prependOnceListener","accounts","isUnlocked","initialized","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","isRecoverable","errorMessage","isPermanentlyDisconnected","debug","streamName","isEthAccounts","finalAccounts","account","hasEmittedConnection","createHash","defaults","options","algorithms","delimiter","full","hashes","internalHashes","forEach","algorithm","sri","output","join","main","finalOptions","EventEmitter","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","closed","open","href","focus","redirect","locationReplaceOnRedirect","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","querySelectorAll","find","_icon","Boolean","getSiteMetadata","engine","domainMetadata","originalError","get","setAPIKey","BasePostMessageStream","setupMultiplex","deepmerge","configuration","generateIntegrity","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","preLoadIframe","upbondIframeHtml","check","hash","version","crossOrigin","rel","ACCOUNT_TYPE","NORMAL","THRESHOLD","IMPORTED","Upbond","opts","buttonPosition","buttonSize","isInitialized","requestedVerifier","currentVerifier","apiKey","modalZIndex","alertZIndex","isIframeFullScreen","isUsingDirect","widgetConfig","showAfterLoggedIn","showBeforeLoggedIn","enableLogging","enabledVerifiers","network","networkName","blockExplorer","ticker","tickerName","rpcUrl","loginConfig","whiteLabel","skipTKey","useWalletConnect","mfaLevel","selectedVerifier","skipDialog","dappRedirectUri","consentConfiguration","state","buildTempEnv","enableAll","disableAll","loginConfigTemp","stringify","isAvailableOnLoginConfig","dappRedirectUrl","isCustomLogin","setDefaultLevel","upbondIframeUrl","pathname","endsWith","encodeURIComponent","upbondIframe","torusAlertContainer","style","setProperty","defaultLanguage","customTranslations","mergedTranslations","languageTranslations","embedTranslations","handleSetup","_setupWeb3","initStream","success","_displayIframe","directConfig","redirectUrl","appendChild","fetchUrl","resp","fetch","cache","headers","text","calculatedIntegrity","clearInit","login","verifier","login_hint","loginHint","ethereum","requestAuthServiceAccessToken","authServiceAccessToken","logout","logOutStream","statusStream","statusStreamHandler","status","loggedIn","localStorage","removeItem","cleanUp","isElement","element","Element","HTMLDocument","styleLink","contains","remove","torusAlert","hideWidget","_sendWidgetVisibilityStatus","showWidget","showMenu","_sendWidgetMenuVisibilityStatus","hideMenu","setProvider","rest","_objectWithoutProperties","_excluded","providerChangeStream","preopenInstanceId","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","x","walletWindow","showSignTransaction","getPublicAddress","_ref2","verifierId","isExtended","walletVerifier","openloginVerifier","useAPIKey","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","handlerChunk","_handleWindow","getTkey","tkeyAccessStream","tkeyAccessHandler","tkeyInfoStream","tkeyInfoHandler","getMpcProvider","mpcProviderStream","sendTransaction","initiateTopup","topupStream","topupHandler","loginWithPrivateKey","loginParams","privateKey","userInfo","loginPrivKeyStream","loginHandler","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","logoUrl","logoLight","logoDark","upbondButtonVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","targetWindow","contentWindow","targetOrigin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","apply","setTimeout","handleLoginCb","_","_showLoginPopup","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","widgetStream","getItem","getCachedData","rehydrate","setItem","oauthStream","isRehydrate","urlParams","URLSearchParams","delete","newQueryParams","baseUrl","newUrl","history","replaceState","calledFromEmbed","successAlert","btnContainer","bindOnLoad","children","attachOnLoad","default"],"sourceRoot":""}